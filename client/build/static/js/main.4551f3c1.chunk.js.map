{"version":3,"sources":["pages/assets/logo-01.png","pages/assets/tech.png","pages/assets/NutritionixAPI.png","components/AuthButton/AuthButton.js","components/Nav/Nav.js","components/Caldisplay/Caldisplay.js","components/Wrapper/Wrapper.js","components/Container/Container.js","utils/API.js","components/VideoModal/VideoModal.js","components/BarcodeModal/BarcodeModal.js","components/TextInputModal/TextInputModal.js","components/LaunchPage/LaunchPage.js","components/UpdateModal/UpdateModal.js","pages/CalorieCount/CalorieCount.js","Auth.js","pages/Callback.js","pages/Unauthorized.js","pages/UserProfile.js","pages/About.js","pages/NoMatch.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","AuthButton","this","props","auth","isAuthenticated","react_default","a","createElement","className","onClick","logout","login","Component","Example","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleNavbar","bind","assertThisInitialized","state","collapsed","setState","message","messages","concat","name","Math","floor","random","length","reactstrap_es","light","href","isOpen","navbar","Link","to","components_AuthButton_AuthButton","expand","React","Caldisplay","xs","id","dailyGoal","actual","remainingStatus","remaining","Wrapper","children","Container","API","getFoodsbyUser","params","axios","get","username","getFoodsbyUserAndDateRange","today","tomorrow","getFoodsbyUserAndDateRangeAndMeal","meal","getFoodbyId","getUser","updateUser","user","put","deleteFood","delete","deleteFoodsbyUser","deleteUser","createFood","food","post","createUser","updateFood","callImageRecognition","image","nutritionixInstantSearch","searchItem","nutritionixBarcodeSearch","nutritionixNutritionSearch","callScanBarcode","VideoModal","onResponseFromIR","response","now","Date","getTime","breakfastStartTime","setHours","breakfastEndTime","lunchStartTime","lunchEndTime","dinnerStartTime","dinnerEndTime","selectedMeal","code","alert","resetModal","results","data","hits","secondDisplay","firstDisplay","video","play","initMedia","navigator","mediaDevices","getUserMedia","then","stream","enumerateDevices","devices","gotDevices","constraints","deviceId","exact","preferredDevice","console","log","catch","handleError","deviceInfos","device_names","deviceNames","preferred_device","i","deviceInfo","document","value","kind","push","label","match","JSON","stringify","gotStream","window","srcObject","stopUsingCamera","getTracks","forEach","track","stop","start","error","videoOnClick","snap","takeSnapshot","setAttribute","classList","add","src","pause","context","canvas","getContext","width","height","drawImage","toDataURL","handleConsume","index","quantity","toggle","_this$state","item_name","fields","nf_calories","nf_protein","nf_serving_size_unit","nf_total_carbohydrate","date_consumed","moment","date","format","date_added","date_modified","onResponseFromSearch","err","modal","undefined","ideal","searchedFood","thirdDisplay","new_modal_state","_this2","color","ref","playsInline","autoPlay","alt","map","oneitem","key","type","onChange","e","target","min","max","BarcodeModal","onResponseFromBarcode","food_name","serving_unit","TextInputModal","onResponseFromNutritionix","handleSearch","event","preventDefault","buttonLabel","LaunchPage","fluid","UpdateModal","onResponseFromUpdateSubmit","handleUpdateClick","handleUpdateSubmit","dateConsumed","handleMealChange","_event$target","res","charAt","pluralServingSize","_this3","inputVal","round","handleDateChange","CalorieCount","loadFood","calorieGoal","toDateDisplay","unix","fromDateDisplay","allFood","doDashboardCalculation","calValues","sum","reduce","b","progress","progressColor","toggleModal","isVideoModalOpen","snapFood","fromDate","toDate","_event$target2","handleSearchResponse","components_Wrapper_Wrapper","components_Container_Container","xl","components_Caldisplay_Caldisplay","components_VideoModal_VideoModal","assign","onClose","components_BarcodeModal_BarcodeModal","components_TextInputModal_TextInputModal","for","_id","components_UpdateModal_UpdateModal","data-id","components_LaunchPage_LaunchPage","Auth","auth0","WebAuth","domain","clientID","redirectUri","location","origin","audience","responseType","scope","authorize","prompt","parseHash","authResults","accessToken","idToken","expiresAt","expiresIn","localStorage","setItem","hash","pathname","parse","getItem","removeItem","jwtDecode","Callback","handleAuthentication","Unauthorized","UserProfile","auth0UserId","pages_Unauthorized","About","photo","tech","nutritionixLogo","NoMatch","App","BrowserRouter","Nav_Example","Switch","Route","path","render","pages_CalorieCount_CalorieCount","Callback_Callback","pages_UserProfile","src_pages_About","component","Boolean","hostname","changes","ReactDOM","src_App_0","getElementById","profileImage","getProfile","given_name","picture","nickname","sub","initialState","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4551f3c1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-01.fe2cc579.png\";","module.exports = __webpack_public_path__ + \"static/media/tech.9d67c02e.png\";","module.exports = __webpack_public_path__ + \"static/media/NutritionixAPI.0be07412.png\";","import React, { Component } from \"react\";\n\nclass AuthButton extends Component {\n    render() {\n        const loggedIn = this.props.auth.isAuthenticated();\n        if (loggedIn) {\n            return (<button className=\"btn btn-primary border-0\" onClick={this.props.auth.logout}>Log Out</button>)\n        } else {\n            return (<button className=\"btn btn-primary border-0\" onClick={this.props.auth.login}>Log In</button>)\n        }\n    }\n}\n\nexport default AuthButton;","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem } from 'reactstrap';\nimport AuthButton from \"../AuthButton/AuthButton.js\"\n// import CalPal from \"../CalPal/CalPal.js\"\nimport \"./Nav.css\";\n\n\nexport default class Example extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleNavbar = this.toggleNavbar.bind(this);\n    this.state = {\n      collapsed: true\n    };\n  }\n\n  toggleNavbar() {\n    this.setState({\n      collapsed: !this.state.collapsed\n    });\n  }\n\n  render() {\n\n    let message = \"\";\n\n    if (this.props.auth.isAuthenticated()) {\n      const messages = [\n        `Welcome, ${this.props.name}`,\n        `You got this, ${this.props.name}`, \n        `You can do it, ${this.props.name}`, \n        `Slow And Steady Wins The Race, ${this.props.name}`, \n        `Like Your Money, Food Should Be Working For You, ${this.props.name}`, \n        `It’s Not A Diet, It’s A Lifestyle Change!`, \n        `Doubt Kills More Dreams Than Failure Ever Will`, \n        `Will Is A Skill, ${this.props.name}`, \n        `Stressed Spelled Backwards Is Desserts. Coincidence? I think not!`, \n        `Strive For Progress, Not Perfection`, `Success Is Never Certain, Failure Is Never Final`, \n        `A Goal Without A Plan Is Just A Wish, ${this.props.name}`, \n        `Success Is The Sum Of Small Efforts, Repeated Day In And Day Out`\n      ];\n\n      message = messages[(Math.floor(Math.random() * messages.length))];\n    } else {\n\n      message = \"Your goals are just snaps away!\"\n    }\n\n    if (this.props.auth.isAuthenticated()) {\n      return (\n        <div>\n          <Navbar light>\n            <NavbarBrand href=\"/\" className=\"text-white\">CalSnap</NavbarBrand>\n            <div className=\"text-white message\">{message}</div>\n            <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\n            <Collapse isOpen={!this.state.collapsed} navbar>\n              <Nav navbar>\n                <NavItem>\n                  <Link to=\"/\" onClick={this.toggleNavbar} className=\"btn text-white mr-3 mb-xs-3\">Home</Link>\n                </NavItem>\n                <NavItem>\n                  {/* <CalPal {...props}>CalBud</CalPal> */}\n                  <Link to=\"/userprofile\" onClick={this.toggleNavbar} className=\"btn text-white mr-3 mb-xs-3\">Profile</Link>\n                </NavItem>\n                <NavItem>\n                  <Link to=\"/about\" onClick={this.toggleNavbar} className=\"btn text-white mr-3 mb-xs-3\">About</Link>\n                </NavItem>\n                <NavItem>\n                  <AuthButton {...this.props} />\n                </NavItem>\n              </Nav>\n            </Collapse>\n          </Navbar>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <Navbar light expand=\"md\">\n            <NavbarBrand href=\"/\" className=\"text-white\">CalSnap</NavbarBrand>\n            <div className=\"text-white message\">{message}</div>\n            <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\n            <Collapse isOpen={!this.state.collapsed} navbar>\n              <Nav navbar className=\"ml-auto\">\n              <NavItem>\n                  <AuthButton {...this.props} />\n                </NavItem>\n                <NavItem>\n                  <Link to=\"/about\" onClick={this.toggleNavbar} className=\"btn text-white mr-3 mb-xs-3\">About</Link>\n                </NavItem>\n              </Nav>\n            </Collapse>\n          </Navbar>\n        </div>\n      );\n    }\n  }\n}","import React from \"react\";\nimport { Row, Col } from 'reactstrap';\nimport \"./Caldisplay.css\";\n\nclass Caldisplay extends React.Component {\n\n\n\n  render() {\n\n    \n    return (\n\n        \n        <Row className=\"row cal-display\">\n          <Col xs=\"4\">\n            <div className=\"cal-title\">Goal:</div>\n            <div className=\"cal-tile\" id=\"cal-goal\"><b>{this.props.dailyGoal}</b></div>\n          </Col>\n          <Col xs=\"4\" className=\"cal\">\n            <div className=\"cal-title\">Consumed:</div>\n            <div className=\"cal-tile\" id=\"cal-actual\"><b>{this.props.actual}</b></div>\n          </Col>\n          <Col xs=\"4\">\n            <div className=\"cal-title\">Remaining: </div>\n            <div className=\"cal-tile\" id={this.props.remainingStatus}><b>{this.props.remaining}</b></div>\n          </Col>\n        </Row>\n\n   \n\n    )\n\n  }\n}\n\nexport default Caldisplay;","import React from \"react\";\nimport \"./Wrapper.css\";\n\nconst Wrapper = props => <div className=\"container-fluid\">{props.children}</div>;\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./Container.css\";\n\nconst Container = props => <div className=\"container-fluid\">{props.children}</div>;\n\nexport default Container;\n","import axios from \"axios\";\n\nexport default {\n  // Gets all food for user\n  getFoodsbyUser: function (params) {\n    return axios.get(`/api/food/${params.username}`);\n  },\n  // Gets all food for user by date range\n  getFoodsbyUserAndDateRange: function (params) {\n    return axios.get(`/api/food/${params.username}/${params.today}/${params.tomorrow}`)\n  },\n  // Gets all food for user by date range and meal\n  getFoodsbyUserAndDateRangeAndMeal: function (params) {\n    return axios.get(`/api/food/${params.username}/${params.today}/${params.tomorrow}/${params.meal}`)\n  },\n  getFoodbyId: function (id) {\n    return axios.get(`/api/food/${id}`)\n  },\n  // Gets user\n  getUser: function (params) {\n    return axios.get(`/api/user/${params.username}`)\n  },\n  updateUser: function (id, user) {\n    return axios.put(`/api/user/${id}`, user)\n  },\n  // Deletes the food with the given id\n  deleteFood: function (id) {\n    return axios.delete(`/api/food/${id}`);\n  },\n  // Deletes the foods related to username\n  deleteFoodsbyUser: function (username) {\n    return axios.delete(`/api/food/deleteallfoods/${username}`)\n  },\n  // Deletes the foods & profile related to username & deletes Auth0 profile\n  deleteUser: function (username, id) {\n    return axios.delete(`/api/user/${username}/${id}`)\n  },\n  // Saves a food to the database\n  createFood: function (food) {\n    return axios.post(\"/api/food/\", food);\n  },\n  // Saves a new user to the database\n  createUser: function (user) {\n    return axios.post(\"/api/user\", user);\n  },\n  updateFood: function (id, food) {\n    return axios.put(`/api/food/${id}`, food)\n  },\n  callImageRecognition: (image) => {\n    return axios.post(\"/api/food/identify\", { image: image })\n  },\n  nutritionixInstantSearch: (searchItem) => {\n    return axios.post(\"api/food/nutritionix/instant\", { searchItem: searchItem })\n  },\n  nutritionixBarcodeSearch: () => {\n    return axios.post(\"api/food/nutritionix/barcode\")\n  },\n  nutritionixNutritionSearch: () => {\n    return axios.post(\"api/food/nutritionix/nutrition\")\n  },\n  callScanBarcode: (image) => {\n    return axios.post(\"/api/food/scanBarcode\", { image: image })\n  }\n};","import React from 'react';\nimport { Button, Modal, Row, Col, ModalHeader, ModalBody, Input } from 'reactstrap';\nimport API from \"../../utils/API\";\nimport \"./VideoModal.css\";\nimport moment from \"moment\"\n\nclass VideoModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onResponseFromIR = this.onResponseFromIR.bind(this);\n    this.onResponseFromSearch = this.onResponseFromSearch.bind(this);\n    this.state = {\n      modal: false,\n      constraints: {\n        video: {\n          deviceId: { exact: undefined },\n          height: { ideal: 1080 },\n          width: { ideal: 1920 }\n        }\n      },\n      deviceNames: [],\n      preferredDevice: null,\n      searchedFood: \"\",\n      firstDisplay: \"reveal\",\n      secondDisplay: \"d-none\",\n      thirdDisplay: \"d-none\",\n      results: [],\n      quantity: 1,\n      selectedMeal: \"\"\n    };\n\n    this.initMedia()\n    this.toggle = this.toggle.bind(this);\n  }\n\n  onResponseFromIR = response => {\n    let now = new Date().getTime();\n    let today = new Date();\n    let breakfastStartTime = today.setHours(6, 0, 0, 0);\n    let breakfastEndTime = today.setHours(9, 0, 0, 0);\n    let lunchStartTime = today.setHours(11, 30, 0, 0);\n    let lunchEndTime = today.setHours(14, 0, 0, 0);\n    let dinnerStartTime = today.setHours(17, 0, 0, 0);\n    let dinnerEndTime = today.setHours(20, 0, 0, 0);\n    if ((breakfastStartTime <= now) && (now <= breakfastEndTime)) {\n      this.setState({ selectedMeal: \"Breakfast\" })\n    } else if ((lunchStartTime <= now) && (now <= lunchEndTime)) {\n      this.setState({ selectedMeal: \"Lunch\" })\n    } else if ((dinnerStartTime <= now) && (now <= dinnerEndTime)) {\n      this.setState({ selectedMeal: \"Dinner\" })\n    } else {\n      this.setState({ selectedMeal: \"Snack\" })\n    }\n    // this.props.onResponseFromIR(response);\n    if (response.code !== \"000\") {\n      alert(`Image is not identifyable!`)\n      this.resetModal();\n    } else {\n      this.setState({ results: response.data.hits, secondDisplay: \"reveal\" })\n      // console.log(\"this is from nutritionix: \", this.state.results)\n      this.setState({ firstDisplay: \"d-none\" })\n    }\n  }\n\n  resetModal = () => {\n    this.video.play();\n  }\n\n  initMedia = () => {\n    navigator.mediaDevices.getUserMedia({video:true}).then(stream => {\n      navigator.mediaDevices.enumerateDevices().then(devices => {\n        this.gotDevices(devices)\n        this.setState({ constraints: { video: { deviceId: { exact: this.state.preferredDevice.deviceId } } } })\n        console.log(`*** the preferred deviceid now set to: ${this.state.constraints.video.deviceId.exact}`)\n        return devices;\n      }).then(stream => {\n      }).catch(this.handleError);\n    })   \n  }\n\n  gotDevices = (deviceInfos) => {\n    // Handles being called several times to update labels. Preserve values.\n    // console.log(`\"===> the device infoS are: ${JSON.stringify(deviceInfos)}`)\n\n    let device_names = this.state.deviceNames\n    let preferred_device = null\n    for (let i = 0; i !== deviceInfos.length; ++i) {\n      const deviceInfo = deviceInfos[i]\n      // console.log(`\"===> the device info is: ${JSON.stringify(deviceInfo)}`)\n      const option = document.createElement('option')\n      option.value = deviceInfo.deviceId\n      if (deviceInfo.kind === 'videoinput') {\n        // console.log(\"==> now appending the vidoeselection of: \" + deviceInfo.label)\n\n        device_names.push(deviceInfo.label);\n        if (!this.state.preferredDevice) {\n          console.log(`now setting the preffered device to: ${JSON.stringify(deviceInfo)}`)\n          preferred_device = deviceInfo    // take a camera of some kind\n        } else {\n          // if (deviceInfo.label === \"Back Camera\") {\n          if (deviceInfo.label.match('[Bb]ack|rear|environment')) {     // regex to match for back/Back camera\n            console.log(`now setting the preffered device to back camera: ${JSON.stringify(deviceInfo)}`)\n            preferred_device = deviceInfo   // prefer the back camera!\n          }\n        }\n      }\n      this.setState({ deviceNames: device_names, preferredDevice: preferred_device })\n    }\n  }\n\n  gotStream = (stream) => {\n    window.stream = stream; // make stream available to console\n    // console.log(`=== now setting the window stream to: ${JSON.stringify(stream)}`)\n    this.video.srcObject = stream;\n    // Refresh button list in case labels have become available\n    return navigator.mediaDevices.enumerateDevices();\n  }\n\n  stopUsingCamera = () => {\n    // console.log(`******* stop using camera!!! **************`)\n    if (window.stream) {\n      window.stream.getTracks().forEach(track => {\n        track.stop();\n      });\n    }\n  }\n\n  start = () => {\n    if (window.stream) {\n      window.stream.getTracks().forEach(track => {\n        track.stop();\n      });\n    }\n    if (this.state.preferredDevice) {\n      console.log(`the preferred Device id is: ${this.state.preferredDevice.deviceId}`)\n    }\n    // console.log(`the constraints is: ${JSON.stringify(this.state.constraints)}`)\n    navigator.mediaDevices.getUserMedia(this.state.constraints).then(this.gotStream).then(this.gotDevices).catch(this.handleError)\n  }\n\n  handleError = (error) => {\n    console.log('navigator.getUserMedia error: ', error);\n  }\n\n  toggle() {\n    let new_modal_state = !this.state.modal\n    this.setState({\n      modal: new_modal_state,\n      firstDisplay: \"reveal\",\n      secondDisplay: \"d-none\",\n      quantity: 1\n    });\n    if (new_modal_state) {\n      this.start()\n    } else {\n      this.stopUsingCamera()\n    }\n  }\n\n  videoOnClick = () => {\n    let snap = this.takeSnapshot();\n    // Show image. \n    this.image.setAttribute('src', snap);\n    this.image.classList.add(\"visible\");\n    console.log(`going to hit the watson backend route now.....`)\n    API.callImageRecognition(this.image.src).then(response => {\n      // console.log(`the response back from the image recognition is: ${JSON.stringify(response.data)}`)\n      this.onResponseFromIR(response.data)\n    })\n    this.video.pause();\n  }\n\n  takeSnapshot = () => {\n\n    let context = this.canvas.getContext('2d');\n\n    let width = 300,\n      height = 200;\n\n    if (width && height) {\n\n      // Setup a canvas with the same dimensions as the video.\n      this.canvas.width = width;\n      this.canvas.height = height;\n\n      // Make a copy of the current frame in the video on the canvas.\n      context.drawImage(this.video, 0, 0, width, height);\n\n      // Turn the canvas image into a dataURL that can be used as a src for our photo.\n      return this.canvas.toDataURL('image/jpeg', 1.0);\n    }\n  }\n\n  // handles selection of food and calls API to place in database.   \n  handleConsume = (index) => {\n    this.setState({ secondDisplay: \"d-none\" })\n    console.log(\"quantity: \" + this.state.quantity);\n    console.log(\"meal: \" + this.state.selectedMeal);\n    this.toggle()\n    this.setState({ firstDisplay: \"reveal\" })\n    // TO DO: clear out forms after quantity entered\n    this.toggle()\n    this.setState({ secondDisplay: \"d-none\" })\n    const { quantity, results, selectedMeal } = this.state\n    API.createFood({\n      item_name: results[index].fields.item_name,\n      quantity,\n      nf_calories: results[index].fields.nf_calories * quantity,\n      nf_protein: results[index].fields.nf_protein * quantity,\n      nf_serving_size_unit: results[index].fields.nf_serving_size_unit,\n      nf_total_carbohydrate: results[index].fields.nf_total_carbohydrate * quantity,\n      username: this.props.username,\n      meal: selectedMeal,\n      date_consumed: moment(this.props.date + \" 00:00:00.000-0600\").format(\"YYYY-MM-DD HH:mm:ss.SSS\"),\n      date_added: new Date(),\n      date_modified: new Date()\n    })\n      .then(this.onResponseFromSearch)\n      .catch(err => console.log(err))\n  }\n\n  onResponseFromSearch = () => {\n    this.props.onResponseFromSearch();  // callback to our parent so it can reload state from Mongo\n  }\n\n  render() {\n    return (\n      <div>\n        <Button color=\"danger\" className=\"snap-button\" onClick={this.toggle}><i className=\"fas fa-camera\"></i></Button>\n        <Modal isOpen={this.state.modal} id=\"video-modal\" toggle={this.toggle} className={this.props.className}>\n          <ModalHeader className={this.state.firstDisplay} toggle={this.toggle}>Touch the image to Snap!</ModalHeader>\n          <ModalHeader className={this.state.secondDisplay} toggle={this.toggle}>Choose an Item to Eat:</ModalHeader>\n          <ModalBody>\n            <div className={this.state.firstDisplay}>\n              <video ref={video => { this.video = video }} onClick={this.videoOnClick} className=\"videoInsert img-fluid\" playsInline autoPlay />\n              <img ref={image => { this.image = image }} alt=\"food pic\" className=\"d-none\" />\n              <canvas ref={canvas => { this.canvas = canvas }} className=\"d-none\" />\n              {/* {this.start} */}\n            </div>\n            <div className={this.state.secondDisplay}>\n              <div>\n                {this.state.results.map((oneitem, index) => (\n                  <div key={index + 1000}>\n                    <Row >\n                      <Col>\n                        <b>{oneitem.fields.item_name}</b>\n                      </Col>\n                    </Row>\n                    <Row className=\"mt-1\">\n                      <Col>\n                        Calories: {oneitem.fields.nf_calories} | Serving: {oneitem.fields.nf_serving_size_unit}\n                      </Col>\n                    </Row>\n                    <Row className=\"mt-2\">\n                      <Col>\n                        <Input\n                          type=\"select\"\n                          name=\"mealSelect\"\n                          id=\"meal-select\"\n                          className=\"form-control form-control-sm modal-meal-selector\"\n                          value={this.state.selectedMeal}\n                          onChange={e => this.setState({ selectedMeal: e.target.value })}\n                        >\n                          <option>Breakfast</option>\n                          <option>Lunch</option>\n                          <option>Dinner</option>\n                          <option>Snack</option>\n                        </Input>\n                      </Col>\n                      <Col>\n                        <Input\n                          type=\"number\"\n                          name=\"quantity\"\n                          min=\"0\"\n                          max=\"100\"\n                          value={this.state.quantity}\n                          id=\"quantityText\"\n                          className=\"form-control form-control-sm modal-quantity-selector\"\n                          onChange={e => this.setState({ quantity: e.target.value })}\n                        >\n                        </Input>\n                      </Col>\n                      <Col>\n                        <button onClick={this.handleConsume.bind(this, index)} className=\"results-button\" key={index}>Consume</button>\n                      </Col>\n                    </Row>\n                    <hr></hr>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default VideoModal;","import React from 'react';\nimport { Button, Modal, Row, Col, ModalHeader, ModalBody, Input } from 'reactstrap';\nimport API from \"../../utils/API\";\nimport \"./BarcodeModal.css\";\nimport moment from \"moment\"\n\nclass BarcodeModal extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onResponseFromBarcode = this.onResponseFromBarcode.bind(this);\n        this.state = {\n            modal: false,\n            constraints: {\n                video: {\n                    deviceId: { exact: undefined },\n                    height: { ideal: 1080 },\n                    width: { ideal: 1920 }\n                }\n            },\n            deviceNames: [],\n            preferredDevice: null,\n            searchedFood: \"\",\n            firstDisplay: \"reveal\",\n            secondDisplay: \"d-none\",\n            results: [],\n            quantity: 1,\n            selectedMeal: \"\"\n        };\n\n        this.initMedia()\n        this.toggle = this.toggle.bind(this);\n    }\n\n    onResponseFromBarcode = response => {\n        // console.log(\"this is the responseFromIR: \", response.data)\n        let now = new Date().getTime();\n        let today = new Date();\n        let breakfastStartTime = today.setHours(6, 0, 0, 0);\n        let breakfastEndTime = today.setHours(9, 0, 0, 0);\n        let lunchStartTime = today.setHours(11, 30, 0, 0);\n        let lunchEndTime = today.setHours(14, 0, 0, 0);\n        let dinnerStartTime = today.setHours(17, 0, 0, 0);\n        let dinnerEndTime = today.setHours(20, 0, 0, 0);\n        if ((breakfastStartTime <= now) && (now <= breakfastEndTime)) {\n            this.setState({ selectedMeal: \"Breakfast\" })\n        } else if ((lunchStartTime <= now) && (now <= lunchEndTime)) {\n            this.setState({ selectedMeal: \"Lunch\" })\n        } else if ((dinnerStartTime <= now) && (now <= dinnerEndTime)) {\n            this.setState({ selectedMeal: \"Dinner\" })\n        } else {\n            this.setState({ selectedMeal: \"Snack\" })\n        }\n        // this.setState({ secondDisplay: \"reveal\" })\n        if (response.code !== \"000\") {\n            alert(`Image is not identifyable!`)\n            this.resetModal();\n        } else {\n            this.setState({ results: response.data, secondDisplay: \"reveal\" })\n            // console.log(\"this is from nutritionix: \", this.state.results)\n            this.setState({ firstDisplay: \"d-none\" })\n        }\n    }\n\n    resetModal = () => {\n        this.video.play();\n    }\n\n    initMedia = () => {\n        navigator.mediaDevices.getUserMedia({video:true}).then(stream => {\n            navigator.mediaDevices.enumerateDevices().then(devices => {\n              this.gotDevices(devices)\n              this.setState({ constraints: { video: { deviceId: { exact: this.state.preferredDevice.deviceId } } } })\n              console.log(`*** the preferred deviceid now set to: ${this.state.constraints.video.deviceId.exact}`)\n              return devices;\n            }).then(stream => {\n            }).catch(this.handleError);\n          })   \n    }\n\n    gotDevices = (deviceInfos) => {\n        // Handles being called several times to update labels. Preserve values.\n        // console.log(`\"===> the device infoS are: ${JSON.stringify(deviceInfos)}`)\n\n        let device_names = this.state.deviceNames\n        let preferred_device = null\n        for (let i = 0; i !== deviceInfos.length; ++i) {\n            const deviceInfo = deviceInfos[i]\n            // console.log(`\"===> the device info is: ${JSON.stringify(deviceInfo)}`)\n            const option = document.createElement('option')\n            option.value = deviceInfo.deviceId\n            if (deviceInfo.kind === 'videoinput') {\n                // console.log(\"==> now appending the vidoeselection of: \" + deviceInfo.label)\n\n                device_names.push(deviceInfo.label);\n                if (!this.state.preferredDevice) {\n                    console.log(`now setting the preffered device to: ${JSON.stringify(deviceInfo)}`)\n                    preferred_device = deviceInfo    // take a camera of some kind\n                } else {\n                    // if (deviceInfo.label === \"Back Camera\") {\n                    if (deviceInfo.label.match('[Bb]ack|rear|environment')) {     // regex to match for back/Back camera\n                        console.log(`now setting the preffered device to back camera: ${JSON.stringify(deviceInfo)}`)\n                        preferred_device = deviceInfo   // prefer the back camera!\n                    }\n                }\n            }\n            this.setState({ deviceNames: device_names, preferredDevice: preferred_device })\n        }\n    }\n\n    gotStream = (stream) => {\n        window.stream = stream; // make stream available to console\n        // console.log(`=== now setting the window stream to: ${JSON.stringify(stream)}`)\n        this.video.srcObject = stream;\n        // Refresh button list in case labels have become available\n        return navigator.mediaDevices.enumerateDevices();\n    }\n\n    stopUsingCamera = () => {\n        if (window.stream) {\n            window.stream.getTracks().forEach(track => {\n                track.stop();\n            });\n        }\n    }\n\n    start = () => {\n        if (window.stream) {\n            window.stream.getTracks().forEach(track => {\n                track.stop();\n            });\n        }\n        if (this.state.preferredDevice) {\n            console.log(`the preferred Device id is: ${this.state.preferredDevice.deviceId}`)\n        }\n        // console.log(`the constraints is: ${JSON.stringify(this.state.constraints)}`)\n        navigator.mediaDevices.getUserMedia(this.state.constraints).then(this.gotStream).then(this.gotDevices).catch(this.handleError)\n    }\n\n    handleError = (error) => {\n        console.log('navigator.getUserMedia error: ', error);\n    }\n\n    toggle() {\n        let new_modal_state = !this.state.modal\n        this.setState({\n            modal: new_modal_state,\n            firstDisplay: \"reveal\",\n            secondDisplay: \"d-none\"\n        });\n        if (new_modal_state) {\n            this.start()\n        } else {\n            this.stopUsingCamera()\n        }\n    }\n\n    videoOnClick = () => {\n        let snap = this.takeSnapshot();\n        // Show image. \n        this.image.setAttribute('src', snap);\n        this.image.classList.add(\"visible\");\n        console.log(`going to hit the watson backend route now.....`)\n        API.callScanBarcode(this.image.src).then(response => {\n            // console.log(`the response back from the image recognition is: ${JSON.stringify(response.data)}`)\n            this.onResponseFromBarcode(response.data)\n        })\n        this.video.pause();\n    }\n\n    takeSnapshot = () => {\n\n        let context = this.canvas.getContext('2d');\n\n        let width = 300,\n            height = 200;\n\n        if (width && height) {\n\n            // Setup a canvas with the same dimensions as the video.\n            this.canvas.width = width;\n            this.canvas.height = height;\n\n            // Make a copy of the current frame in the video on the canvas.\n            context.drawImage(this.video, 0, 0, width, height);\n\n            // Turn the canvas image into a dataURL that can be used as a src for our photo.\n            return this.canvas.toDataURL('image/jpeg', 1.0);\n        }\n    }\n\n    handleConsume = () => {\n        // console.log(JSON.stringify(this.state.results))\n        this.setState({ secondDisplay: \"d-none\" })\n        console.log(\"quantity: \" + this.state.quantity)\n        this.toggle()\n        this.setState({ firstDisplay: \"reveal\" })\n        // TO DO: clear out forms after quantity entered\n        this.toggle()\n        this.setState({ secondDisplay: \"d-none\" })\n\n        // new stuff for destructuring\n        const { results, quantity, selectedMeal } = this.state\n\n        API.createFood({\n            item_name: results.food_name,\n            quantity,\n            nf_calories: results.nf_calories * quantity,\n            nf_protein: results.nf_protein * quantity,\n            nf_serving_size_unit: results.serving_unit,\n            nf_total_carbohydrate: results.nf_total_carbohydrate * quantity,\n            username: this.props.username,\n            meal: selectedMeal,\n            date_consumed: moment(this.props.date + \" 00:00:00.000-0600\").format(\"YYYY-MM-DD HH:mm:ss.SSS\"),\n            date_added: new Date(),\n            date_modified: new Date()\n        })\n            .then(this.onResponseFromSearch)\n            .catch(err => console.log(err))\n    }\n\n    onResponseFromSearch = () => {\n        this.props.onResponseFromSearch();  // callback to our parent so it can reload state from Mongo\n    }\n\n    render() {\n        return (\n            <div>\n                <Button color=\"danger\" className=\"snap-button\" onClick={this.toggle}><i className=\"fas fa-barcode\"></i></Button>\n                <Modal isOpen={this.state.modal} id=\"video-modal\" toggle={this.toggle} className={this.props.className}>\n                    <ModalHeader className={this.state.firstDisplay} toggle={this.toggle}>Touch image to snap barcode!</ModalHeader>\n                    <ModalHeader className={this.state.secondDisplay} toggle={this.toggle}>Enter number of servings:</ModalHeader>\n                    <ModalBody>\n                        <div id=\"videoimage\" className={this.state.firstDisplay}>\n                            <video ref={video => { this.video = video }} onClick={this.videoOnClick} className=\"videoInsert img-fluid\" playsInline autoPlay />\n                            <img ref={image => { this.image = image }} alt=\"food pic\" className=\"d-none\" />\n                            <canvas ref={canvas => { this.canvas = canvas }} className=\"d-none\" />\n                        </div>\n                        <div className={this.state.secondDisplay}>\n                            <div>\n                                <Row >\n                                    <Col>\n                                        <b>{this.state.results.food_name}</b>\n                                    </Col>\n                                </Row>\n                                <Row className=\"mt-1\">\n                                    <Col>\n                                        Calories: {this.state.results.nf_calories} | Serving: {this.state.results.serving_unit}\n                                    </Col>\n                                </Row>\n                                <Row className=\"mt-2\">\n                                    <Col>\n                                        <Input\n                                            type=\"select\"\n                                            name=\"mealSelect\"\n                                            id=\"meal-select\"\n                                            className=\"form-control form-control-sm modal-meal-selector\"\n                                            value={this.state.selectedMeal}\n                                            onChange={e => this.setState({ selectedMeal: e.target.value })}\n                                        >\n                                            <option>Breakfast</option>\n                                            <option>Lunch</option>\n                                            <option>Dinner</option>\n                                            <option>Snack</option>\n                                        </Input>\n                                    </Col>\n                                    <Col>\n                                        <Input\n                                            type=\"number\"\n                                            name=\"quantity\"\n                                            min=\"0\"\n                                            max=\"100\"\n                                            value={this.state.quantity}\n                                            id=\"quantityText\"\n                                            className=\"form-control form-control-sm modal-quantity-selector\"\n                                            onChange={e => this.setState({ quantity: e.target.value })}\n                                        >\n                                        </Input>\n                                    </Col>\n                                    <Col>\n                                        <button onClick={() => this.handleConsume()} className=\"results-button\">Consume</button>\n                                    </Col>\n                                </Row>\n                                <hr></hr>\n                            </div>\n                        </div>\n                    </ModalBody>\n                </Modal>\n            </div >\n        );\n    }\n\n}\n\nexport default BarcodeModal;","import React from 'react';\nimport { Button, Modal, Row, Col, ModalHeader, ModalBody, Form, FormGroup, Input } from 'reactstrap';\nimport API from \"../../utils/API\";\nimport \"./TextInputModal.css\";\nimport moment from \"moment\"\n\nclass TextInputModal extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleSearch = this.handleSearch.bind(this);\n        this.onResponseFromSearch = this.onResponseFromSearch.bind(this);\n        this.state = {\n            modal: false,\n            searchedFood: \"\",\n            firstDisplay: \"reveal\",\n            secondDisplay: \"d-none\",\n            results: [],\n            quantity: 1,\n            selectedMeal: \"\"\n        };\n\n        this.toggle = this.toggle.bind(this);\n    }\n\n    onResponseFromSearch = () => {\n        this.props.onResponseFromSearch();  // callback to our parent so it can reload state from Mongo\n    }\n\n    // when the response comes back from the backend need to hit the callback on our parent component (CalorieCount)\n    onResponseFromNutritionix = response => {\n        let now = new Date().getTime();\n        let today = new Date();\n        let breakfastStartTime = today.setHours(6, 0, 0, 0);\n        let breakfastEndTime = today.setHours(9, 0, 0, 0);\n        let lunchStartTime = today.setHours(11, 30, 0, 0);\n        let lunchEndTime = today.setHours(14, 0, 0, 0);\n        let dinnerStartTime = today.setHours(17, 0, 0, 0);\n        let dinnerEndTime = today.setHours(20, 0, 0, 0);\n        if ((breakfastStartTime <= now) && (now <= breakfastEndTime)) {\n            this.setState({ selectedMeal: \"Breakfast\" })\n        } else if ((lunchStartTime <= now) && (now <= lunchEndTime)) {\n            this.setState({ selectedMeal: \"Lunch\" })\n        } else if ((dinnerStartTime <= now) && (now <= dinnerEndTime)) {\n            this.setState({ selectedMeal: \"Dinner\" })\n        } else {\n            this.setState({ selectedMeal: \"Snack\" })\n        }\n        this.setState({ secondDisplay: \"reveal\" })\n        if (response.code !== \"000\") {\n            alert(`something went wrong with the search.  Try again!`)\n        } else {\n            this.setState({ results: response.data.hits })\n        }\n    }\n\n    toggle() {\n        this.setState({\n            modal: !this.state.modal,\n            firstDisplay: \"reveal\",\n            secondDisplay: \"d-none\",\n            searchedFood: \"\"\n        });\n    }\n\n    // handles search button on modal\n    handleSearch = (event) => {\n        // this.setState({  })\n        console.log(\"this was submitted: \" + this.state.searchedFood);\n        // this.toggle();\n        event.preventDefault();\n        API.nutritionixInstantSearch(this.state.searchedFood).then(response => {\n            // console.log(`the response back from the search is: ${JSON.stringify(response.data)}`)\n\n            this.onResponseFromNutritionix(response.data)\n            // const { item_name, nf_calories } = response.data.hits[0].fields\n            // console.log({ item_name, nf_calories } = response.data.hits[0].fields) \n            this.setState({ firstDisplay: \"d-none\" })\n        })\n    }\n\n    // handles selection of food and calls API to place in database.   \n    handleConsume = (index) => {\n        // console.log(`This is the selected item: ${JSON.stringify(this.state.results[index])}`)\n        this.setState({ secondDisplay: \"d-none\" })\n        console.log(\"quantity: \" + this.state.quantity);\n        console.log(\"meal: \" + this.state.selectedMeal);\n        this.toggle()\n        this.setState({ firstDisplay: \"reveal\" })\n        // TO DO: clear out forms after quantity entered\n        this.toggle()\n        this.setState({ secondDisplay: \"d-none\" })\n        console.log(`This is the date: ${this.props.date}`)\n        const { quantity, results, selectedMeal } = this.state\n        API.createFood({\n            item_name: results[index].fields.item_name,\n            quantity,\n            nf_calories: results[index].fields.nf_calories * quantity,\n            nf_protein: results[index].fields.nf_protein * quantity,\n            nf_serving_size_unit: results[index].fields.nf_serving_size_unit,\n            nf_total_carbohydrate: results[index].fields.nf_total_carbohydrate * quantity,\n            username: this.props.username,\n            meal: selectedMeal,\n            date_consumed: moment(this.props.date + \" 00:00:00.000-0600\").format(\"YYYY-MM-DD HH:mm:ss.SSS\"),\n            date_added: new Date(),\n            date_modified: new Date()\n        })\n            .then(this.onResponseFromSearch)\n            .catch(err => console.log(err))\n    }\n\n    // handles form input change\n    // handleInputChange = event => {\n    //     const { name, value } = event.target;\n    //     this.setState({\n    //         [name]: value\n    //     });\n    // };\n\n    render() {\n        return (\n            <div>\n                <Button color=\"danger\" className=\"snap-button\" onClick={this.toggle}>{this.props.buttonLabel}<i className=\"fas fa-search\"></i></Button>\n                <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n                    <ModalHeader className={this.state.firstDisplay} toggle={this.toggle}>Search for a specific item!</ModalHeader>\n                    <ModalHeader className={this.state.secondDisplay} toggle={this.toggle}>Choose an Item to Eat:</ModalHeader>\n                    <ModalBody>\n                        <Form className={this.state.firstDisplay}>\n                            <FormGroup>\n                                <Input type=\"textarea\" name=\"text\" id=\"foodText\" value={this.state.searchedFood} onChange={e => this.setState({ searchedFood: e.target.value })} />\n                            </FormGroup>\n                            <Button  onClick={this.handleSearch} className=\"foodSearch\">Search</Button>\n                        </Form>\n                        <div className={this.state.secondDisplay}>\n                            <div>\n                                {this.state.results.map((oneitem, index) => (\n                                    <div key={index + 1000}>\n                                        <Row >\n                                            <Col>\n                                                <b>{oneitem.fields.item_name}</b>\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"mt-1\">\n                                            <Col>\n                                                Calories: {oneitem.fields.nf_calories} | Serving: {oneitem.fields.nf_serving_size_unit}\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"mt-2\">\n                                            <Col>\n                                                <Input\n                                                    type=\"select\"\n                                                    name=\"mealSelect\"\n                                                    id=\"meal-select\"\n                                                    className=\"form-control form-control-sm modal-meal-selector\"\n                                                    value={this.state.selectedMeal}\n                                                    onChange={e => this.setState({ selectedMeal: e.target.value })}\n                                                >\n                                                    <option>Breakfast</option>\n                                                    <option>Lunch</option>\n                                                    <option>Dinner</option>\n                                                    <option>Snack</option>\n                                                </Input>\n                                            </Col>\n                                            <Col>\n                                                <Input\n                                                    type=\"number\"\n                                                    name=\"quantity\"\n                                                    min=\"0\"\n                                                    max=\"100\"\n                                                    id=\"quantityText\"\n                                                    className=\"form-control form-control-sm modal-quantity-selector\"\n                                                    value={this.state.quantity}\n                                                    onChange={e => this.setState({ quantity: e.target.value })}\n                                                >\n                                                </Input>\n                                            </Col>\n                                            <Col>\n                                                <button onClick={this.handleConsume.bind(this, index)} className=\"results-button\" key={index}>Consume</button>\n                                            </Col>\n                                        </Row>\n                                        <hr></hr>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </ModalBody>\n                </Modal>\n\n            </div>\n        )\n    }\n}\n\n\nexport default TextInputModal;","import React from \"react\";\nimport \"./LaunchPage.css\";\nimport { Link } from \"react-router-dom\";\nimport { Jumbotron, Row, Col, Container } from 'reactstrap';\n\nclass LaunchPage extends React.Component {\n\n\n    render() {\n        return (\n        <div>\n            <Jumbotron fluid>\n                <Container>\n                    <Row>\n                        <Col xs=\"12\">\n                            <h1>Welcome to CalSnap</h1>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs=\"12\">\n                            <Link to=\"\" className=\"launch-page-login\"><h2 onClick={this.props.auth.login}>Log in to get started</h2></Link>\n                        </Col>\n                    </Row>\n                </Container>\n            </Jumbotron>\n        </div>\n        )\n    }\n};\n\nexport default LaunchPage;","import React from 'react';\nimport { Button, Modal, ModalFooter, ModalHeader, ModalBody, Row, Col, Input } from 'reactstrap';\nimport API from \"../../utils/API\";\nimport \"./UpdateModal.css\";\nimport moment from \"moment\"\n\nclass UpdateModal extends React.Component {\n    constructor(props) {\n        super(props);\n        // this.handleSearch = this.handleSearch.bind(this);\n        // this.onResponseFromSearch = this.onResponseFromSearch.bind(this);\n        this.state = {\n            modal: false,\n            firstDisplay: \"reveal\",\n            secondDisplay: \"d-none\",\n            item_name: \"\",\n            meal: \"\",\n            nf_calories: 0,\n            nf_protein: 0,\n            nf_serving_size_unit: \"\",\n            nf_total_carbohydrate: 0,\n            quantity: 0,\n            date_consumed: \"\"\n        };\n\n        this.toggle = this.toggle.bind(this);\n    }\n\n    toggle() {\n        this.setState({\n            modal: !this.state.modal,\n            firstDisplay: \"reveal\",\n            secondDisplay: \"d-none\"\n        });\n    }\n\n    componentDidMount() {\n        API.getFoodbyId(this.props.id)\n            .then(res => this.setState({ food: res.data }))\n            .then(res =>\n                this.setState({\n                    item_name: this.state.food[0].item_name,\n                    meal: this.state.food[0].meal,\n                    nf_calories: this.state.food[0].nf_calories,\n                    nf_protein: this.state.food[0].nf_protein,\n                    nf_serving_size_unit: this.state.food[0].nf_serving_size_unit,\n                    nf_total_carbohydrate: this.state.food[0].nf_total_carbohydrate,\n                    quantity: this.state.food[0].quantity,\n                    date_consumed: this.state.food[0].date_consumed\n                })).then(res => {\n                    if ((this.state.quantity > 1) && (`${this.state.nf_serving_size_unit}`.charAt(`${this.state.nf_serving_size_unit}`.length - 1) !== \"s\")) {\n                        let pluralServingSize = this.state.nf_serving_size_unit + \"s\"\n                        this.setState({ nf_serving_size_unit: pluralServingSize })\n                    }\n                })\n            .catch(err => console.log(err));\n    }\n\n    onResponseFromUpdateSubmit = () => {\n        this.props.onResponseFromSearch();  // callback to our parent so it can reload state from Mongo\n    }\n\n    handleUpdateClick = () => {\n        this.setState({\n            firstDisplay: \"d-none\",\n            secondDisplay: \"reveal\"\n        })\n    }\n\n    handleUpdateSubmit = () => {\n        this.setState({ secondDisplay: \"d-none\" })\n        this.toggle()\n        this.setState({ firstDisplay: \"reveal\" })\n        this.toggle()\n        this.setState({ secondDisplay: \"d-none\" })\n        const { quantity, nf_calories, nf_protein, nf_serving_size_unit, nf_total_carbohydrate, meal, date_consumed } = this.state\n        let dateConsumed = moment(date_consumed).format(\"YYYY-MM-DD\")\n        API.updateFood(this.props.id, {\n            quantity,\n            nf_calories,\n            nf_protein,\n            nf_serving_size_unit,\n            nf_total_carbohydrate,\n            meal,\n            date_consumed: dateConsumed,\n            date_modified: new Date()\n        })\n            .then(this.onResponseFromUpdateSubmit)\n            .catch(err => console.log(err))\n    }\n\n    handleMealChange = event => {\n        const { name, value } = event.target;\n        console.log(`=> should be changing ${name} in handleDateChange to: ${value}`)\n        let date = \"\"\n        if (name === \"date\") {\n            date = value\n        }\n        this.setState({\n            // [name]: value\n            date_consumed: moment(date).format(\"YYYY-MM-DD\")\n        }, () => {this.handleUpdateSubmit()})   // call to loadFood only AFTER setState is finished!\n    };\n\n    render() {\n        return (\n            <div>\n                <button className=\"btn-link btn-no-style\" onClick={this.toggle}>{this.props.buttonLabel}{this.props.inputVal}</button>\n                <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n                    <ModalHeader toggle={this.toggle}>{this.props.inputVal}</ModalHeader>\n                    <ModalBody>\n                        <div className={this.state.firstDisplay}>\n                            <Row>\n                                <Col>\n                                    <strong>Date:</strong>\n                                </Col>\n                                <Col>\n                                    {moment(this.state.date_consumed).format(\"YYYY-MM-DD\")}\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    <strong>Calories:</strong>\n                                </Col>\n                                <Col>\n                                    {Math.round(this.state.nf_calories)}\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col className=\"mt-1\">\n                                    <strong>Quantity:</strong>\n                                </Col>\n                                <Col className=\"mt-1\">\n                                    {this.state.quantity} {this.state.nf_serving_size_unit}\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col className=\"mt-1\">\n                                    <strong>Meal:</strong>\n                                </Col>\n                                <Col className=\"mt-1\">\n                                    {this.state.meal}\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col className=\"mt-1\">\n                                    <strong>Protein:</strong>\n                                </Col>\n                                <Col className=\"mt-1\">\n                                    {Math.round(this.state.nf_protein)}\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col className=\"mt-1\">\n                                    <strong>Total Carbs:</strong>\n                                </Col>\n                                <Col className=\"mt-1\">\n                                    {Math.round(this.state.nf_total_carbohydrate)}\n                                </Col>\n                            </Row>\n                        </div>\n                        <div className={this.state.secondDisplay}>\n                            <Row>\n                                <Col>\n                                    <strong>Date:</strong>\n                                </Col>\n                                <Col>\n                                    <Input\n                                        type=\"date\"\n                                        name=\"date\"\n                                        id=\"date\"\n                                        className=\"form-control form-control-sm\"\n                                        value={this.state.date}\n                                        onChange={() => this.handleDateChange}\n                                    >\n                                    </Input>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    <strong>Calories:</strong>\n                                </Col>\n                                <Col>\n                                    <Input\n                                        type=\"number\"\n                                        name=\"calories\"\n                                        id=\"caloriesNumber\"\n                                        className=\"form-control form-control-sm\"\n                                        value={Math.round(this.state.nf_calories)}\n                                        onChange={e => this.setState({ nf_calories: e.target.value })}\n                                    >\n                                    </Input>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col className=\"mt-1\">\n                                    <strong>Quantity ({this.state.nf_serving_size_unit}):</strong>\n                                </Col>\n                                <Col>\n                                    <Input\n                                        type=\"number\"\n                                        name=\"quantity\"\n                                        id=\"quantityNumber\"\n                                        className=\"form-control form-control-sm\"\n                                        value={Math.round(this.state.quantity)}\n                                        onChange={e => this.setState({ quantity: e.target.value })}\n                                    >\n                                    </Input>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col className=\"mt-1\">\n                                    <strong>Meal:</strong>\n                                </Col>\n                                <Col>\n                                    <Input\n                                        type=\"select\"\n                                        name=\"mealSelect\"\n                                        id=\"meal-select\"\n                                        className=\"form-control form-control-sm\"\n                                        value={this.state.meal}\n                                        onChange={e => this.setState({ meal: e.target.value })}\n                                    >\n                                        <option>Breakfast</option>\n                                        <option>Lunch</option>\n                                        <option>Dinner</option>\n                                        <option>Snack</option>\n                                    </Input>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col className=\"mt-1\">\n                                    <strong>Protein:</strong>\n                                </Col>\n                                <Col>\n                                    <Input\n                                        type=\"number\"\n                                        name=\"protein\"\n                                        id=\"proteinNumber\"\n                                        className=\"form-control form-control-sm\"\n                                        value={Math.round(this.state.nf_protein)}\n                                        onChange={e => this.setState({ nf_protein: e.target.value })}\n                                    >\n                                    </Input>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col className=\"mt-1\">\n                                    <strong>Total Carbs:</strong>\n                                </Col>\n                                <Col>\n                                    <Input\n                                        type=\"number\"\n                                        name=\"totalCarbs\"\n                                        id=\"totalCarbsNumber\"\n                                        className=\"form-control form-control-sm\"\n                                        value={Math.round(this.state.nf_total_carbohydrate)}\n                                        onChange={e => this.setState({ nf_total_carbohydrate: e.target.value })}\n                                    >\n                                    </Input>\n                                </Col>\n                            </Row>\n                        </div>\n                    </ModalBody>\n                    <ModalFooter>\n                        <div className={this.state.firstDisplay}>\n                            <Button color=\"primary\" onClick={() => this.handleUpdateClick()}>Update</Button>{' '}\n                            <Button color=\"secondary\" onClick={this.toggle}>Done</Button>\n                        </div>\n                        <div className={this.state.secondDisplay}>\n                            <Button color=\"primary\" onClick={() => this.handleUpdateSubmit()}>Submit</Button>{' '}\n                            <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\n                        </div>\n                    </ModalFooter>\n                </Modal>\n            </div >\n        )\n    }\n}\n\n\nexport default UpdateModal;","import React, { Component } from \"react\";\nimport { Table, Row, Col, Input, Label, Progress } from 'reactstrap';\nimport './CalorieCount.css';\nimport Caldisplay from \"../../components/Caldisplay\";\nimport Wrapper from \"../../components/Wrapper\";\nimport Container from \"../../components/Container\";\n// import { FoodDisplay, FoodItem } from \"../../components/FoodDisplay\";\n// import SnapFoodBtn from \"../../components/SnapFoodButton\";\nimport VideoModal from \"../../components/VideoModal\";\nimport BarcodeModal from \"../../components/BarcodeModal\";\nimport TextInputModal from \"../../components/TextInputModal\";\nimport LaunchPage from \"../../components/LaunchPage\";\nimport UpdateModal from \"../../components/UpdateModal\";\n// import ResultsModal from \"../../components/ResultsModal\";\nimport API from \"../../utils/API\";\nimport moment from \"moment\"\n\nclass CalorieCount extends Component {\n    constructor(props) {\n        super(props);\n        this.loadFood = this.loadFood.bind(this);\n\n        this.state = {\n            dailyGoal: 2000,\n            calorieGoal: 2000,\n            actual: 0,\n            remaining: 0,\n            progress: 0,\n            progressColor: \"success\",\n            isVideoModalOpen: false,\n            searchItem: \"orange\",\n            food: [],\n            allFood: [],\n            calValues: [],\n            item_name: \"\",\n            nf_calories: 0,\n            quantity: 0,\n            remainingStatus: \"cal-actual\",\n            meal: \"\",\n            fromDateDisplay: moment().format(\"YYYY-MM-DD\"),\n            toDateDisplay: moment().format(\"YYYY-MM-DD\")\n        }\n    }\n    componentDidMount() {\n        if (this.props.auth.isAuthenticated()) {\n            // this.loadFood();\n        }\n        API.getUser({\n            username: this.props.username\n        })\n            .then(res => {\n                if (!res.data && this.props.auth.isAuthenticated()) {\n                    API.createUser({\n                        username: this.props.username\n                    })\n                        .then(res => \n                            {console.log(\"User created: \", res.data)\n                            this.loadFood();\n                        })\n                        .catch(err => console.log(err));\n                } else {\n                    // console.log(`===> the response from getting the user on mouting is: ${JSON.stringify(res.data)}`)\n                    this.setState({ dailyGoal: res.data.calorieGoal , calorieGoal: res.data.calorieGoal }, () => {\n                        this.loadFood()\n                    })\n                }\n            })\n            // .then(this.loadFood())\n            .catch(err => console.log(err));\n\n    }\n\n    loadFood = () => {\n        // Calculate daily goal base on number of days\n        // console.log(\"This is the # of days: \", Math.round(moment(this.state.toDateDisplay).add(1, \"d\").unix() - moment(this.state.fromDateDisplay).unix()) / (60 * 60 * 24));\n        let dailyGoal = this.state.calorieGoal * (Math.round(moment(this.state.toDateDisplay).add(1, \"d\").unix() - moment(this.state.fromDateDisplay).unix()) / (60 * 60 * 24))\n        this.setState({ dailyGoal });\n        // console.log(\"This is the dailyGoal: \", dailyGoal);\n        // console.log(`=> initially when inside loadFood and fromDate is: [${this.state.fromDateDisplay} 00:00:00.999`)\n        // console.log(`=> initially when inside loadFood and toDate is: ${this.state.toDateDisplay}`)\n        let today = moment(this.state.fromDateDisplay + \" 00:00:00.000-0600\").format(\"YYYY-MM-DD HH:mm:ss.SSS\")\n        let tomorrow = moment(this.state.toDateDisplay + \" 23:59:59.999-0600\").format(\"YYYY-MM-DD HH:mm:ss.SSS\")\n        // console.log(`**** fromDate: ${today}  toDate: ${tomorrow}`)\n        API.getFoodsbyUserAndDateRange({\n            username: this.props.username,\n            today,\n            tomorrow\n        })\n            .then(res => {\n                this.setState({ food: res.data, allFood: res.data, item_name: \"\", nf_calories: \"\", quantity: \"\" })\n                this.doDashboardCalculation()\n            }\n            ).then(res => {\n                if (this.state.meal === \"Breakfast\" || \"Lunch\" || \"Dinner\" || \"Snack\") {\n                    API.getFoodsbyUserAndDateRangeAndMeal({\n                        username: this.props.username,\n                        today,\n                        tomorrow,\n                        meal: this.state.meal\n                    })\n                    .then(res => {\n                        this.setState({ food: res.data })\n                    }).then(res => this.doDashboardCalculation())\n                }\n            })\n            .catch(err => console.log(err));\n    };\n\n    // finds sum of total calories in food array and subtracts from daily goal\n    doDashboardCalculation = () => {\n        this.setState({ \n            calValues: [],\n            actual: 0,\n            remaining: this.state.dailyGoal\n         })\n        // console.log(`in dashboard for foods=> ${JSON.stringify(this.state.food)}`)\n        if (this.state.allFood.length === 0) {   // if null then return\n            console.log(`NO FOOD for date!`)\n            return;\n        }\n        this.state.allFood.map(allFood => (\n            this.setState({ calValues: this.state.calValues.concat(allFood.nf_calories) })\n        ))\n        const add = (a, b) => a + b\n        const sum = (this.state.calValues).reduce(add)\n        this.setState({ actual: Math.round(sum) })\n        this.setState({ remaining: this.state.dailyGoal - this.state.actual });\n        this.setState({ progress: (this.state.actual / this.state.dailyGoal) * 100 })\n        console.log(\"this is the progress percent: \", this.state.progress)\n        // this updates remaining color based on value\n        if (this.state.progress > 75) {\n            this.setState({ remainingStatus: \"cal-red\" })\n        } else {\n            this.setState({ remainingStatus: \"cal-goal\" })\n        }\n\n        // this updates progress bar color base on value\n        if (this.state.progress > 75) {\n            this.setState({ progressColor: \"danger\" })\n        } else if (this.state.progress < 75 && this.state.progress > 60) {\n            this.setState({ progressColor: \"warning\" })\n        } else if (this.state.progress < 60) {\n            this.setState({ progressColor: \"success\" })\n        }\n    }\n\n    deleteFood = id => {\n        API.deleteFood(id)\n            .then(res => this.loadFood())\n            .catch(err => console.log(err));\n    };\n\n    toggleModal = () => {\n        console.log(`modal state is: ${this.state.isVideoModalOpen}`)\n        this.setState({\n            isVideoModalOpen: !this.state.isVideoModalOpen\n        });\n        console.log(`modal state is: ${this.state.isVideoModalOpen}`)\n    }\n\n    snapFood = event => {\n        // event.preventDefault();\n        console.log(\"click is working\")\n        this.toggleModal()\n    }\n\n    // handle the form search button to kick off the search to the NYT\n    // handleSearchSubmit = event => {\n    //     event.preventDefault();\n\n    //     // API.hitapi({\n    //     // })\n    //     //     .then(res => {\n    //     //             return res\n    //     //         })\n    //     //     })\n    //     //     .catch(err => console.log(err));\n    // }\n\n    // Generic component state handler when the user types into the input field\n    handleDateChange = event => {\n        const { name, value } = event.target;\n        console.log(`=> should be changing ${name} in handleDateChange to: ${value}`)\n        let fromDate = \"\"\n        let toDate = \"\"\n        if (name === \"fromDateDisplay\") {\n            toDate = fromDate = value\n        } else {\n            fromDate = this.state.fromDateDisplay\n            toDate = value\n        }\n        if (fromDate > toDate) {\n            alert(\"Invalid Date Selection! Try again...\")\n        } else {\n            console.log(`should be changing fromDateDisplay to ${fromDate} and toDateDisplay to ${toDate}`)\n            this.setState({\n                // [name]: value\n                fromDateDisplay: fromDate,\n                toDateDisplay: toDate\n            }, () => { this.loadFood() })   // call to loadFood only AFTER setState is finished!\n        }\n    };\n\n\n    handleMealChange = event => {\n        const { name, value } = event.target;\n        console.log(`=> should be changing ${name} in handleDateChange to: ${value}`)\n        let meal = \"\"\n        if (name === \"meal\") {\n            meal = value\n        }\n        if (meal === \"All\") {\n            meal = \"\"\n        }\n        this.setState({\n            // [name]: value\n            meal: meal\n        }, () => { this.loadFood() })   // call to loadFood only AFTER setState is finished!\n    };\n\n    handleSearchResponse = response => {\n        console.log(`*** inside callback from Search and about to reload state from the Mongo ***`)\n        this.loadFood()\n    }\n\n    render() {\n        const loggedIn = this.props.auth.isAuthenticated();\n        if (loggedIn) {\n            return (<Wrapper>\n                <Container className=\"container-fluid\">\n                    <Row className=\"scoreboard-row\">\n                        <Col xl=\"12\">\n                            <Caldisplay\n                                dailyGoal={this.state.dailyGoal}\n                                actual={this.state.actual}\n                                remaining={this.state.remaining}\n                                remainingStatus={this.state.remainingStatus}\n                            />\n                        </Col>\n\n                        <Col xl=\"12\">\n                            <div className=\"bar-row\">\n                                {/* <div className=\"text-center\">{this.state.progress}%</div> */}\n                                <Progress color={this.state.progressColor} value={this.state.progress} />\n                            </div>\n                        </Col>\n                    </Row>\n\n                    <Row className=\"button-row justify-content-center\">\n\n                        <VideoModal isOpen={this.state.isVideoModalOpen} date={this.state.fromDateDisplay}\n                            onResponseFromSearch={this.handleSearchResponse} {...this.props}\n                            onClose={this.toggleModal} buttonLabel=\"Snap Food!\">\n                        </VideoModal>\n\n                        <BarcodeModal\n                            onResponseFromSearch={this.handleSearchResponse} date={this.state.fromDateDisplay} {...this.props}\n                            buttonLabel=\"Scan Barcode!!\">\n                        </BarcodeModal>\n\n                        <TextInputModal onResponseFromSearch={this.handleSearchResponse} date={this.state.fromDateDisplay} {...this.props}>\n                        </TextInputModal>\n\n                    </Row>\n                    <Row className=\"row selector-row\">\n                        {/* <Col xs=\"1\" className=\"label\">\n                            \n                        </Col> */}\n                        <Col className=\"col-4 p-1\">\n                            <Label for=\"meal-select\" className=\"col-form-label\" id=\"label\">Meal: </Label>\n                            <Input\n                                type=\"select\"\n                                name=\"meal\"\n                                id=\"meal-select\"\n                                className=\"form-control form-control-sm selector\"\n                                value={this.state.meal}\n                                onChange={this.handleMealChange}\n                            >\n                                <option>All</option>\n                                <option>Breakfast</option>\n                                <option>Lunch</option>\n                                <option>Dinner</option>\n                                <option>Snack</option>\n                            </Input>\n                        </Col>\n                        {/* <Col xs=\"1\">\n                            \n                        </Col> */}\n                        <Col className=\"col-4 p-1\">\n                            <Label for=\"from-date-select\" className=\"col-form-label\" id=\"label\">From: </Label>\n                            <Input\n                                type=\"date\"\n                                name=\"fromDateDisplay\"\n                                id=\"from-date-select\"\n                                className=\"form-control form-control-sm selector\"\n                                value={this.state.fromDateDisplay}\n                                onChange={this.handleDateChange}\n                            >\n                            </Input>\n                        </Col>\n                        {/* <Col xs=\"1\">\n                            \n                        </Col> */}\n                        <Col className=\"col-4 p-1\">\n                            <Label for=\"to-date-select\" className=\"col-form-label\" id=\"label\">To: </Label>\n                            <Input\n                                type=\"date\"\n                                name=\"toDateDisplay\"\n                                id=\"to-date-select\"\n                                className=\"form-control form-control-sm selector\"\n                                value={this.state.toDateDisplay}\n                                onChange={this.handleDateChange}\n                            >\n                            </Input>\n                        </Col>\n                    </Row>\n                    {this.state.food.length ? (\n                        <Table className=\"results-table\">\n                            <thead>\n                                <tr>\n                                    <th>Item</th>\n                                    <th>Cals</th>\n                                    <th>#</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {this.state.food.map(food => (\n                                    <tr key={food._id}>\n                                        <td><UpdateModal onResponseFromSearch={this.handleSearchResponse} date={this.state.fromDateDisplay} inputVal={food.item_name} id={food._id}></UpdateModal></td>\n                                        {/* <td className=\"item-name\" onClick={() => this.updateFood()}><a>{food.item_name}</a></td>        */}\n                                        <td>{Math.round(food.nf_calories)}</td>\n                                        <td>{food.quantity}</td>\n                                        <td><button onClick={() => this.deleteFood(food._id)} className=\"btn btn-danger delete-button\" data-id={food._id}>X</button></td>\n\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    ) : (\n                            <Row>\n                                <Col xl=\"12\" className=\"mt-2\">\n                                    <h3>Start Snapping for results!</h3>\n                                </Col>\n                            </Row>\n\n                        )}\n                </Container>\n            </Wrapper>\n            )\n        } else {\n            return (<LaunchPage {...this.props}></LaunchPage>)\n        }\n    }\n};\n\n\nexport default CalorieCount;","/* eslint no-restricted-globals: 0 */\nimport auth0 from 'auth0-js';\nimport jwtDecode from 'jwt-decode';\n\nconst LOGIN_SUCCESS_PAGE = \"/\";\nconst LOGIN_FAILURE_PAGE = \"/\";\n\nexport default class Auth {\n  auth0 = new auth0.WebAuth({\n    domain: 'calsnap.auth0.com',\n    clientID: 'r36PlDF49Kwba8YSed3olsgg2iOgGcdT',\n    redirectUri: `${window.location.origin}/callback`,\n    audience: 'https://calsnap.auth0.com/userinfo',\n    responseType: 'token id_token',\n    scope: 'openid profile user_metadata'\n  });\n\n  constructor() {\n    this.login = this.login.bind(this);\n  }\n\n  login() {\n    this.auth0.authorize({\n      prompt: 'login'\n    })\n  }\n\n  handleAuthentication() {\n    this.auth0.parseHash((err, authResults) => {\n      console.log(authResults);\n      if (authResults && authResults.accessToken && authResults.idToken) {\n        let expiresAt = JSON.stringify((authResults.expiresIn) * 1000 + new Date().getTime());\n        localStorage.setItem(\"access_token\", authResults.accessToken);\n        localStorage.setItem(\"id_token\", authResults.idToken);\n        localStorage.setItem(\"expires_at\", expiresAt);\n        location.hash = \"\";\n        location.pathname = LOGIN_SUCCESS_PAGE;\n      } else if (err) {\n        location.pathname = LOGIN_FAILURE_PAGE;\n        console.log(err);\n      }\n    });\n  }\n\n  isAuthenticated() {\n    let expiresAt = JSON.parse(localStorage.getItem(\"expires_at\"));\n    return new Date().getTime() < expiresAt;\n  }\n\n  logout() {\n    localStorage.removeItem(\"access_token\");\n    localStorage.removeItem(\"id_token\");\n    localStorage.removeItem(\"expires_at\");\n    location.pathname = LOGIN_FAILURE_PAGE;\n  }\n\n  getProfile() {\n    if (localStorage.getItem(\"id_token\")) {\n      return jwtDecode(localStorage.getItem(\"id_token\"));\n    } else {\n      return {};\n    }\n  }\n}","import React, { Component } from \"react\";\nimport Auth from \"../Auth\";\n// import { Input, FormBtn } from \"../../components/Form\";\n\nexport default class Callback extends Component {\n\n  componentDidMount() {\n    const auth = new Auth();\n    auth.handleAuthentication();\n  }\n\n  render(props) {\n    return (\n      <div {...props}>Loading...</div>\n    )};\n}","import React from \"react\";\n\nconst Unauthorized = () => (\n  <h1>401 Unauthorized: Access is denied due to invalid credentials</h1>\n);\n\nexport default Unauthorized;","import React, { Component } from \"react\";\nimport { Container, Row, Col, Input } from 'reactstrap';\n// import { Link } from \"react-router-dom\";\nimport Unauthorized from \"./Unauthorized\";\nimport API from \"../utils/API\";\n\nclass UserProfile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: '',\n            calorieGoal: 0\n        }\n    }\n\n    componentDidMount() {\n        API.getUser({ username: this.props.username })\n            .then(res => {\n                console.log(`got the user's id as: ${res.data._id} and calorieGoal: ${JSON.stringify(res.data)}`)\n                this.setState({ id: res.data._id, calorieGoal: res.data.calorieGoal })\n            })\n            .catch(err => {\n                console.log(`ERROR on call to API.getUser for user: ${this.props.username}`)\n            })\n    }\n\n    // This will update users data\n    updateUser = () => {\n        API.updateUser(this.state.id, { calorieGoal: this.state.calorieGoal })\n            .then(res => console.log(res))\n            .catch(err => console.log(err));\n    };\n\n    // This will delete users data\n    deleteFoodsbyUser = username => {\n        API.deleteFoodsbyUser(username)\n            .then(res => console.log(res))\n            .catch(err => console.log(err));\n    };\n\n    // This will delete user completely\n    deleteUser = (username, id) => {\n        API.deleteUser(username, id)\n            .then(res => {\n                console.log(res)\n                this.props.auth.logout();\n            })\n            .catch(err => console.log(err));\n    };\n    // <img src={this.props.profileImage} alt={this.props.name} className=\"img-fluid h-50\"></img>\n    render() {\n        const loggedIn = this.props.auth.isAuthenticated();\n        if (loggedIn) {\n            return (\n                <Container className=\"mt-3\">\n                    <Row>\n                        <Col>\n                            <Row>\n                                <Col>\n                                    <strong>Name:</strong>\n                                </Col>\n                                <Col>\n                                    {this.props.name}\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    <strong>Username:</strong>\n                                </Col>\n                                <Col>\n                                    {this.props.username}\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    <strong>Daily Calorie Goal:</strong>\n                                </Col>\n                                <Col>\n                                    <Input\n                                        type=\"number\"\n                                        name=\"caloriegoal\"\n                                        id=\"calorieGoal\"\n                                        className=\"form-control form-control-sm\"\n                                        value={this.state.calorieGoal}\n                                        onChange={e => this.setState({ calorieGoal: e.target.value })}\n                                    >\n                                    </Input>\n                                </Col>\n                                <Col>\n                                    <button className=\"btn btn-success\" onClick={() => this.updateUser()}>Update</button>\n                                </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n                    <Container className=\"border border-dark mt-3\">\n                        <Row className=\"mt-3\">\n                            <Col>\n                                <strong>Danger Zone</strong>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Row>\n                                    <Col xl=\"12\" className=\"mt-3\">\n                                        This button will delete ALL of your data!\n                                    </Col>\n                                    <Col xl=\"12\">\n                                        <button className=\"btn btn-danger\" onClick={() => this.deleteFoodsbyUser(this.props.username)}>DELETE ALL DATA</button>\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col xl=\"12\" className=\"mt-3\">\n                                This button will delete ALL of your data and your profile!\n                            </Col>\n                            <Col xl=\"12\" className=\"mb-3\">\n                                <button className=\"btn btn-danger\" onClick={() => this.deleteUser(this.props.username, this.props.auth0UserId)}>DELETE ALL DATA AND PROFILE</button>\n                            </Col>\n                        </Row>\n\n                    </Container>\n\n                </Container>\n            )\n        } else {\n            return (<Unauthorized></Unauthorized>)\n        }\n    }\n};\n\n\nexport default UserProfile;","import React from \"react\";\nimport { Container, Row, Col } from 'reactstrap';\nimport \"./About.css\";\nimport photo from \"../pages/assets/logo-01.png\"\nimport tech from \"../pages/assets/tech.png\"\nimport nutritionixLogo from \"../pages/assets/NutritionixAPI.png\"\n\nconst About = () => (\n\n  <div>\n    <Container>\n      <Row>\n        <Col>\n          <img src={photo} alt=\"CalSnap\" className=\"logo-photo\"></img>\n        </Col>\n      </Row>\n\n      <p>Calsnap is a caloric tracking app developed to assist health conscious users understand\n         the caloric value of foods they have consumed or plan to consume. With customizable goals,\n         reactive caloric tracking and integrated technologies, tracking what you eat is now as easy as a Snap.\n         Powered by IBM’s Watson in conjunction with Nutritionix’s nutritional database, CalSnap’s user friendly\n         search capabilities eliminates the laborious process of searching through endless list of foods and\n         drop-down menus to accurately track what one is eating.</p>\n\n      <p>Simple. Clean. Easy. Just like eating needs to be.</p>\n\n      <b>Search Modes</b>\n      <ul>\n        <li>Natural Language search bar</li>\n        <li>Barcode scanning</li>\n        <li>Image capture powered by IBM’s Watson</li>\n      </ul>\n      <b>Highlights and Key Functionalities</b>\n      <ul>\n        <li>Multi-option search capability</li>\n        <li>Historic record of daily consumption</li>\n        <li>Customizable goals</li>\n        <li>Dynamic daily progress bar</li>\n      </ul>\n\n      <b>Development Team</b>\n      <ul>\n        <li>Craig \"CBO\" Bomba</li>\n        <li>Joshua Gallaway</li>\n        <li>Justin Gerow</li>\n        <li>Don Vincent</li>\n      </ul>\n      <Row>\n        <Col>\n          <img src={tech} alt=\"CalSnap\" className=\"tech-photo\"></img>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <img src={nutritionixLogo} alt=\"Nutritionix\" className=\"nutritionixAPI\"></img>\n        </Col>\n      </Row>\n\n    </Container>\n  </div>\n);\n\nexport default About;","import React from \"react\";\n\nconst NoMatch = () => (\n  <h1>404 Page Not Found</h1>\n);\n\nexport default NoMatch;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Nav from \"./components/Nav\";\nimport CalorieCount from \"./pages/CalorieCount\";\nimport Callback from \"./pages/Callback\";\nimport UserProfile from \"./pages/UserProfile\";\nimport About from \"./pages/About\"\nimport NoMatch from \"./pages/NoMatch\";\nimport './App.css';\n\nconst App = (props) => (\n  <Router>\n    <div>\n      <Nav {...props} />\n      <Switch>\n        <Route exact path=\"/\" render={() => <CalorieCount {...props} />} />\n        <Route path=\"/callback\" render={() => <Callback {...props} />} />\n        <Route path=\"/userprofile\" render={() => <UserProfile {...props} />} />\n        <Route path=\"/about\" render={() => <About />} />\n        <Route component={NoMatch} />\n      </Switch>\n    </div>\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport Auth from \"./Auth\"\nimport * as serviceWorker from './serviceWorker';\n\nconst auth = new Auth();\n\nlet state = {}\n\nwindow.setState = (changes) => {\n    state = Object.assign({}, state, changes);\n\n    ReactDOM.render(<App {...state} />, document.getElementById('root'));\n}\n\nlet name = \"friend\";\nlet profileImage = \"\";\nlet username = \"\";\nlet auth0UserId = \"\";\n\nif (auth.isAuthenticated()) {\n    name = auth.getProfile().given_name || auth.getProfile()[\"https://calsnap.herokuapp.com/user_metadata\"].given_name || \"friend\";\n    profileImage = auth.getProfile().picture || \"\";\n    username = auth.getProfile().nickname || \"\";\n    auth0UserId = auth.getProfile().sub || \"\"; \n}\n\nlet initialState = {\n    name,\n    profileImage,\n    username,\n    auth0UserId,\n    auth\n}\n\nwindow.setState(initialState);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}